{"version":3,"sources":["helpers/auth-header.js","actions/dragDropList.actions.js","beautiful-components/task.js","beautiful-components/columns.js","beautiful-components/addT.js","actions/type.js","actions/alert.actions.js","helpers/history.js","beautiful-components/drag-drop.js","actions/user.actions.js","components/LoginForm.js","actions/task.actions.js","components/AddTask.js","components/DoneList.js","components/ToDoList.js","components/RegisterForm.js","reducers/index.js","reducers/reducer_task.js","reducers/registration.reducer.js","reducers/login.reducer.js","reducers/dropTask.reducer.js","reducers/dropUsers.reducer.js","reducers/userOrder.reducer.js","index.js","Root.js","helpers/privateRoute.js","components/App.js"],"names":["authHeader","user","localStorage","getItem","Authorization","FETCH_TASKS","FETCH_USERS","FETCH_ORDER","CHANGE_ORDER","DELETE_USER_TASK","ADD_TASK","CHANGE_USER_TASKS","GET_ID","DONE_TASK","URL","headers","fetchList","request","axios","get","concat","type","payload","fetchUser","Container","styled","div","_templateObject","props","isDragDisabled","isDragging","Task","_Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","_this","react_default","a","createElement","react_beautiful_dnd_esm","draggableId","task","content","index","column","provided","snapshot","assign","draggableProps","dragHandleProps","ref","innerRef","aria-roledescription","className","data-toggle","aria-labelledby","name","aria-label","onClick","e","deleteTask","id","aria-hidden","Component","connect","delete","columns_templateObject","Title","h3","_templateObject2","TaskList","_templateObject3","isDraggingOver","InnerList","nextProps","tasks","map","beautiful_components_task","Column","_this2","username","columns_Container","title","droppableId","isCombineEnabled","droppableProps","columns_InnerList","placeholder","renderField","field","_field$meta","meta","touched","error","label","input","AddTask","values","forEach","element","document","getElementsByClassName","style","color","textContent","addTask","dispatch","reset","handleSubmit","onSubmit","bind","Field","component","reduxForm","validate","errors","form","state","post","is_done","taskConstans","ROOT_URL","userConstants","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT","alertConstants","SUCCESS","ERROR","CLEAR","alertActions","success","message","clear","createHistory","drag_drop_templateObject","taskMap","_this$props","taskIds","taskId","_","filter","Boolean","columns_Column","swapUserOrder","obj","key1","key2","_ref","DragDrop","_Component2","_getPrototypeOf2","_len","length","args","Array","_key","call","setDoneInLastPosition","userId","mapKeys","columns","userPosition","columnOrder","onDragStart","start","announce","source","homeIndex","indexOf","setState","onDragUpdate","update","destination","onDragEnd","result","combine","getElementsByName","href","text","appendChild","newColumnOrder","changeOrder","startTaskIds","from","splice","newStart","objectSpread","findFromDraggableId","doneTask","changeUserTasks","finish","finishTaskIds","newFinish","newTaskIds","newColumn","_componentDidMount","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","next","fetchOrder","getLogedUser","stop","columnId","drag_drop_InnerList","_this3","logout","direction","drag_drop_Container","renderContent","addT","users","userOrder","orderList","put","removeItem","LoginForm","login","toLowerCase","his","push","loginCallBack","loging","Link","to","display","position","right","top","password","then","data","token","setItem","failure","response","action","posts","fail","res","catch","_id","$oid","toDo","isDone","created","Date","toLocaleString","listOfTasks","DoneList","renderPosts","ToDoList","end","addToDone","addToDoneHelper","RegisterForm","register","registerCallBack","email","test","undefined","repeatPassword","registration","rootReducer","combineReducers","defineProperty","omit","formReducer","registering","userList","split","userWithNewTask","el","ReactDOM","render","children","_ref$initialState","initialState","store","createStore","reducers","applyMiddleware","reduxPromise","thunk","es","Router","history","Switch","rest","objectWithoutProperties","Route","Redirect","pathname","location","exact","path","body","background","backgroundSize","components_ToDoList","components_AddTask","components_DoneList","querySelector"],"mappings":"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","file":"static/js/main.a7264aec.chunk.js","sourcesContent":["export function authHeader() {\r\n    // return authorization header with jwt token\r\n    let user = localStorage.getItem('user');\r\n    if (user ) {\r\n        return { 'Authorization': 'Token ' + user};\r\n    } else {\r\n        return {};\r\n    }\r\n}","import _ from 'lodash';\r\nimport { authHeader } from '../helpers/auth-header';\r\nimport axios from 'axios';\r\n\r\nexport const FETCH_TASKS = 'fetch_tasks';\r\nexport const FETCH_USERS = 'fetch_users';\r\nexport const FETCH_ORDER = 'fetch_order';\r\nexport const CHANGE_ORDER = 'change_order';\r\nexport const DELETE_USER_TASK = 'delete_user_task';\r\nexport const ADD_TASK = 'add_task';\r\nexport const CHANGE_USER_TASKS = 'change_user_tasks';\r\nexport const GET_ID = 'get_id';\r\nexport const DONE_TASK = 'done_task';\r\nconst URL = `https://kruczym.pythonanywhere.com/api/`;\r\n\r\nconst headers = {headers:authHeader()};\r\n\r\n\r\n// HTTP request about tasks\r\nexport const fetchList = () =>{\r\n\r\n    const request = axios.get(`${URL}tasks/`,headers);\r\n        return{\r\n            type: FETCH_TASKS,\r\n            payload: request\r\n        }\r\n}\r\n\r\nexport const deleteTask = (id) => {\r\n    const request = axios.delete(`${URL}tasks/${id}/`,headers)\r\n    return{\r\n        type: DELETE_USER_TASK,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport const addTask = (content) => {\r\n    const request = axios.post(`${URL}tasks/`,{user: localStorage.getItem('userId'),content:content['task'],is_done:false},headers);\r\n\r\n    return{\r\n        type: ADD_TASK,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport const doneTask = (id) =>{\r\n    const request = axios.put(`${URL}tasks/${id}/isdone/`,headers);\r\n    return{\r\n        type: DONE_TASK,\r\n        payload: request\r\n    }\r\n}\r\n\r\n// HTTP request about user data\r\nexport const fetchUser = () =>{\r\n    const request = axios.get(`${URL}users/all/`,headers);\r\n    return{\r\n        type: FETCH_USERS,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\nexport const getLogedUser = () => {\r\n    const request = axios.get(`${URL}users/id/`,headers);\r\n            return{\r\n                type: GET_ID,\r\n                payload: request\r\n            }\r\n}\r\n\r\nexport const changeUserTasks = (user) =>{\r\n    const request = axios.put(`${URL}users/${user.id}/`,{taskIds:user.taskIds},headers);\r\n    return{\r\n        type: CHANGE_USER_TASKS,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\n//HTTP request about task order data\r\nexport const fetchOrder = () =>{\r\n    const request = axios.get(`${URL}user_order/`,headers);\r\n    return{\r\n        type: FETCH_ORDER,\r\n        payload: request\r\n    }\r\n}\r\n\r\nexport const changeOrder = (orderList) => {\r\n    const request = axios.post(`${URL}user_order/`,orderList,headers);\r\n    return{\r\n        type: CHANGE_ORDER,\r\n        payload: request\r\n    }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from \"react\";\r\nimport { deleteTask, fetchList } from \"../actions/dragDropList.actions\";\r\n\r\nimport { Draggable } from \"react-beautiful-dnd\";\r\nimport { connect } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  border: 1px solid lightgrey;\r\n  border-radius: 2px;\r\n  padding: 8px;\r\n  white-space: nowrap;\r\n  margin-bottom: 8px;\r\n  background-color: ${props =>\r\n    props.isDragDisabled\r\n      ? \"lightgrey\"\r\n      : props.isDragging\r\n      ? \"lightgreen\"\r\n      : \"white\"};\r\n`;\r\n\r\nexport class Task extends Component {\r\n  render() {\r\n    return (\r\n      <Draggable\r\n        draggableId={this.props.task.content}\r\n        index={this.props.index}\r\n        isDragDisabled={this.props.column === \"done\"}\r\n      >\r\n        {(provided, snapshot) => (\r\n          <Container\r\n            {...provided.draggableProps}\r\n            {...provided.dragHandleProps}\r\n            ref={provided.innerRef}\r\n            isDragging={snapshot.isDragging}\r\n            aria-roledescription=\"Press space bar to lift the task\"\r\n            className=\"dropdown\"\r\n          >\r\n            {this.props.task.content}\r\n            <button\r\n              className=\"btn btn-link dropdown-toggle\"\r\n              type=\"button\"\r\n              data-toggle=\"dropdown\"\r\n            />\r\n            <div\r\n              className=\"dropdown-menu\"\r\n              aria-labelledby=\"dropdownMenuButton\"\r\n              name={this.props.task.content}\r\n            />\r\n            <button\r\n              type=\"button\"\r\n              className=\"close\"\r\n              aria-label=\"Close\"\r\n              onClick={  e => {\r\n                 this.props.deleteTask(this.props.task.id, e);\r\n              }}\r\n            >\r\n              <span aria-hidden=\"true\">&times;</span>\r\n            </button>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n\r\nexport default connect(\r\n  null,\r\n  { deleteTask, fetchList }\r\n)(Task);\r\n","import { Draggable, Droppable } from \"react-beautiful-dnd\";\r\nimport React, { Component } from \"react\";\r\n\r\nimport Task from \"./task\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  margin: 8px;\r\n  border: 1px solid lightgrey;\r\n  border-radious: 2px;\r\n  min-width: 220px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-y: auto;\r\n`;\r\nconst Title = styled.h3`\r\n  padding: 8px;\r\n  color: white;\r\n  color: ${props => (props.column === \"done\" ? \"green\" : \"\")};\r\n  font-size: ${props => (props.column === \"done\" ? \"50px\" : \"\")};\r\n  font-weight: ${props => (props.column === \"done\" ? \"bold\" : \"\")};\r\n  text-transform: ${props => (props.column === \"done\" ? \"uppercase\" : \"\")};\r\n  text-align: center;\r\n`;\r\nconst TaskList = styled.div`\r\n  padding: 8px;\r\n  transition: background-color 0.2s ease;\r\n  background-color: ${props => (props.isDraggingOver ? \"skyblue\" : \"white\")};\r\n  flex-grow: 1;\r\n  min-height: 100px;\r\n`;\r\n\r\nclass InnerList extends Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    return nextProps.tasks === this.props.tasks ? false : true;\r\n  }\r\n\r\n  render() {\r\n    return this.props.tasks.map((task, index) => (\r\n      <Task\r\n        key={task.id}\r\n        task={task}\r\n        index={index}\r\n        column={this.props.column}\r\n      />\r\n    ));\r\n  }\r\n}\r\n\r\nexport default class Column extends Component {\r\n  render() {\r\n    return (\r\n      <Draggable\r\n        draggableId={this.props.column.username}\r\n        index={this.props.index}\r\n      >\r\n        {provided => (\r\n          <Container {...provided.draggableProps} ref={provided.innerRef}>\r\n            <Title\r\n              column={this.props.column.title}\r\n              {...provided.dragHandleProps}\r\n            >\r\n              {this.props.column.username}\r\n            </Title>\r\n            <Droppable\r\n              droppableId={this.props.column.id}\r\n              type=\"task\"\r\n              isCombineEnabled={\r\n                this.props.column.username === \"done\" ? false : true\r\n              }\r\n            >\r\n              {(provided, snapshot) => (\r\n                <TaskList\r\n                  ref={provided.innerRef}\r\n                  {...provided.droppableProps}\r\n                  isDraggingOver={snapshot.isDraggingOver}\r\n                >\r\n                  <InnerList\r\n                    tasks={this.props.tasks}\r\n                    column={this.props.column.username}\r\n                  />\r\n                  {provided.placeholder}\r\n                </TaskList>\r\n              )}\r\n            </Droppable>\r\n          </Container>\r\n        )}\r\n      </Draggable>\r\n    );\r\n  }\r\n}\r\n","import { Field, reduxForm, reset } from 'redux-form';\r\nimport React, { Component } from 'react';\r\nimport { addTask, fetchList, fetchUser } from '../actions/dragDropList.actions';\r\n\r\nimport { connect } from 'react-redux';\r\n\r\nexport const renderField = field => {\r\n\r\n    const { meta: { touched, error } } = field;\r\n    const className = `form-group ${touched && error ? 'has-danger' : ''}`;\r\n    return (\r\n        <div className={className}>\r\n            <label className=\"labelTask\">{field.label}</label>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                {...field.input}\r\n            />\r\n            <div className=\"text-help\">\r\n                {touched ? error  : ''}\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport class AddTask extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.fetchList();\r\n    }\r\n\r\n    onSubmit(values) {\r\n\r\n        Object.values(this.props.tasks).forEach(element =>{\r\n            if ( element.content === values.task){\r\n                let div = document.getElementsByClassName('text-help')[0];\r\n                div.style.color = 'red';\r\n                div.textContent = 'task must be unique';\r\n                return\r\n            }\r\n        });\r\n\r\n        if(document.getElementsByClassName('text-help')[0].style.color !== 'red'){\r\n            this.props.addTask(values);\r\n            this.props.fetchUser();\r\n            this.props.dispatch(reset('TaskNewForm'));\r\n        }\r\n\r\n\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit } = this.props;\r\n\r\n        return (\r\n            <div className=\"col-sm-4\">\r\n                <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n                    <Field\r\n                        label=\"Add Task\"\r\n                        name=\"task\"\r\n                        component={renderField}\r\n                    />\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Add Task</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction validate(values) {\r\n    const errors = {};\r\n    errors.task = !values.task ?  'Enter a task' : null;\r\n    return errors;\r\n\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n      tasks: state.tasks,\r\n    };\r\n  };\r\n\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'TaskNewForm',\r\n})(\r\n    connect(mapStateToProps, { addTask,fetchUser, fetchList })(AddTask)\r\n)"," export const taskConstans={\r\n     FETCH_LIST_START : 'fetch_list_start',\r\n FETCH_LIST_SUCCESS : 'fetch_list_success',\r\n FETCH_LIST_ERROR : 'fetch_list_error',\r\n\r\n\r\n ADD_TASK_START : 'add_task_start',\r\n ADD_TASK_SUCCESS : 'add_task_success',\r\n ADD_TASK_ERROR : 'add_task_error',\r\n\r\n\r\n ADD_TASK_DONE_START : 'add_task_done_start',\r\n ADD_TASK_DONE_SUCCESS : 'add_task_done_success',\r\n ADD_TASK_DONE_ERROR : 'add_task_done_error',\r\n\r\n\r\n DELETE_TASK_START : 'delete_task_start',\r\n DELETE_TASK_SUCCESS : 'delete_task_success',\r\n DELETE_TASK_ERROR : 'delete_task_error',\r\n\r\n}\r\n\r\n\r\n export const ROOT_URL = 'https://my-json-server.typicode.com/KruczyM/Angular-project/tasks';\r\n\r\n export const userConstants = {\r\n    REGISTER_REQUEST: 'USERS_REGISTER_REQUEST',\r\n    REGISTER_SUCCESS: 'USERS_REGISTER_SUCCESS',\r\n    REGISTER_FAILURE: 'USERS_REGISTER_FAILURE',\r\n\r\n    LOGIN_REQUEST: 'USERS_LOGIN_REQUEST',\r\n    LOGIN_SUCCESS: 'USERS_LOGIN_SUCCESS',\r\n    LOGIN_FAILURE: 'USERS_LOGIN_FAILURE',\r\n    \r\n    LOGOUT: 'USERS_LOGOUT',\r\n};\r\n\r\nexport const alertConstants = {\r\n    SUCCESS: 'ALERT_SUCCESS',\r\n    ERROR: 'ALERT_ERROR',\r\n    CLEAR: 'ALERT_CLEAR'\r\n};\r\n","import { alertConstants } from './type';\r\n\r\nexport const alertActions = {\r\n    success,\r\n    error,\r\n    clear\r\n};\r\n\r\nfunction success(message) {\r\n    return { type: alertConstants.SUCCESS, message };\r\n}\r\n\r\nfunction error(message) {\r\n    return { type: alertConstants.ERROR, message };\r\n}\r\n\r\nfunction clear() {\r\n    return { type: alertConstants.CLEAR };\r\n}","import createHistory from 'history/createBrowserHistory'\r\n\r\nexport default createHistory();","import { DragDropContext, Droppable } from \"react-beautiful-dnd\";\r\nimport React, { Component } from \"react\";\r\nimport {\r\n  changeOrder,\r\n  changeUserTasks,\r\n  doneTask,\r\n  fetchList,\r\n  fetchOrder,\r\n  fetchUser,\r\n  getLogedUser\r\n} from \"../actions/dragDropList.actions\";\r\n\r\nimport Column from \"./columns\";\r\nimport InputTask from \"./addT\";\r\nimport _ from \"lodash\";\r\nimport { connect } from \"react-redux\";\r\nimport { logout } from \"../actions/user.actions\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  display: flex;\r\n  overflow: visible;\r\n`;\r\n\r\nclass InnerList extends Component {\r\n  shouldComponentUpdate(nextProps) {\r\n    if (\r\n      nextProps.column === this.props.column &&\r\n      nextProps.taskMap === this.props.taskMap &&\r\n      nextProps.index === this.props.index\r\n    ) {\r\n      return false;\r\n    }\r\n    return true;\r\n  }\r\n\r\n  render() {\r\n    const { column, taskMap, index } = this.props;\r\n    let tasks\r\n    if( column.title !== 'done'){\r\n       tasks = column.taskIds.map(taskId =>\r\n        taskMap[taskId].is_done === false ? taskMap[taskId] : null\r\n      );\r\n    }\r\n    else{\r\n       tasks = _.map(taskMap,taskId =>\r\n        taskId.is_done === true ? taskId: null\r\n      );\r\n    }\r\n\r\n    tasks = tasks.filter(Boolean);\r\n    return (\r\n      <Column\r\n        column={column}\r\n        tasks={tasks}\r\n        index={index}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nconst swapUserOrder = (obj, key1, key2) => {\r\n  [obj[key1].user, obj[key2].user] = [obj[key2].user, obj[key1].user];\r\n};\r\n\r\nexport class DragDrop extends Component {\r\n  async componentDidMount() {\r\n    await this.props.fetchList();\r\n    await this.props.fetchUser();\r\n    await this.props.fetchOrder();\r\n    await this.props.getLogedUser();\r\n   // this.setDoneInLastPosition();\r\n    }\r\n\r\n  setDoneInLastPosition = () =>{\r\n    const userId = _.mapKeys(this.props.columns,'username')['done'].id;\r\n    const userPosition = _.mapKeys(this.props.columnOrder,'user')[userId].id;\r\n    if(userPosition !== this.props.columnOrder.length) swapUserOrder(this.props.columnOrder,this.props.columnOrder.length,userPosition);\r\n  }\r\n\r\n\r\n  renderContent() {\r\n    return _.map(this.props.columnOrder, (columnId, index) => {\r\n      const column = this.props.columns[columnId[\"user\"]];\r\n      const tasks = _.mapKeys(\r\n        column.taskIds.map(taskId => this.props.tasks[taskId]),\r\n        \"id\"\r\n      );\r\n      return (\r\n        <div>\r\n\r\n          <InnerList\r\n            key={column.id}\r\n            index={index}\r\n            column={column}\r\n            taskMap={column.title === 'done'? this.props.tasks:tasks}\r\n\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  }\r\n\r\n  onDragStart = (start, provided) => {\r\n    provided.announce(\r\n      `You have lifted the task in position ${start.source.index + 1}`\r\n    );\r\n    const homeIndex = this.props.columnOrder.indexOf(start.source.droppableId);\r\n\r\n    this.setState({\r\n      homeIndex\r\n    });\r\n  };\r\n\r\n  onDragUpdate = (update, provided) => {\r\n    const message = update.destination\r\n      ? `You have moved the task to position ${update.destination.index + 1}`\r\n      : `You are currently not over a droppable area`;\r\n\r\n    provided.announce(message);\r\n  };\r\n\r\n  onDragEnd = (result, provided) => {\r\n    const message = result.destination\r\n      ? `You have moved the task from position\r\n      ${result.source.index + 1} to ${result.destination.index + 1}`\r\n      : `The task has been returned to its starting position of\r\n      ${result.source.index + 1}`;\r\n    provided.announce(message);\r\n\r\n    this.setState({\r\n      homeIndex: null\r\n    });\r\n\r\n    const { destination, source, draggableId, type, combine } = result;\r\n\r\n    if (combine) {\r\n      const sourceId = _.mapKeys(this.props.tasks, \"content\")[draggableId].id;\r\n      const destinationId = _.mapKeys(this.props.tasks, \"content\")[\r\n        combine.draggableId\r\n      ].id;\r\n\r\n      const div = document.getElementsByName(combine.draggableId)[0];\r\n      const a = document.createElement(\"a\");\r\n      a.className = \"dropdown-item\";\r\n      a.href = \"#\";\r\n      a.text = draggableId;\r\n      div.appendChild(a);\r\n\r\n      return;\r\n    }\r\n\r\n    if (!destination) {\r\n      return;\r\n    }\r\n\r\n    if (\r\n      destination.droppableId === source.draggableId &&\r\n      destination.index === source.index\r\n    ) {\r\n      return;\r\n    }\r\n\r\n    if (type === \"column\") {\r\n      if (destination.index === this.props.columnOrder.length) {\r\n        return;\r\n      }\r\n\r\n      let newColumnOrder = this.props.columnOrder;\r\n      swapUserOrder(newColumnOrder, source.index, destination.index);\r\n      this.props.changeOrder(newColumnOrder);\r\n      return;\r\n    }\r\n\r\n    if (this.props.columns[destination.droppableId].username === 'done') {\r\n      const start = this.props.columns[source.droppableId];\r\n      const startTaskIds = Array.from(start.taskIds);\r\n      startTaskIds.splice(source.index, 1);\r\n      const newStart = {\r\n        ...start,\r\n        taskIds: startTaskIds\r\n      };\r\n      let findFromDraggableId = _.mapKeys(this.props.tasks, \"content\");\r\n      this.props.doneTask(findFromDraggableId[draggableId].id);\r\n      this.props.changeUserTasks(newStart);\r\n\r\n      return;\r\n    }\r\n\r\n    const start = this.props.columns[source.droppableId];\r\n    const finish = this.props.columns[destination.droppableId];\r\n\r\n    if (start === finish) {\r\n      let findFromDraggableId = _.mapKeys(this.props.tasks, \"content\");\r\n\r\n      const newTaskIds = Array.from(start.taskIds);\r\n      newTaskIds.splice(source.index, 1);\r\n      newTaskIds.splice(\r\n        destination.index,\r\n        0,\r\n        findFromDraggableId[draggableId].id\r\n      );\r\n\r\n      const newColumn = {\r\n        ...start,\r\n        taskIds: newTaskIds\r\n      };\r\n      this.props.changeUserTasks(newColumn);\r\n      return;\r\n    }\r\n\r\n    const startTaskIds = Array.from(start.taskIds);\r\n    startTaskIds.splice(source.index, 1);\r\n    const newStart = {\r\n      ...start,\r\n      taskIds: startTaskIds\r\n    };\r\n\r\n    const finishTaskIds = Array.from(finish.taskIds);\r\n    let findFromDraggableId = _.mapKeys(this.props.tasks, \"content\");\r\n    finishTaskIds.splice(\r\n      destination.index,\r\n      0,\r\n      findFromDraggableId[draggableId].id\r\n    );\r\n    const newFinish = {\r\n      ...finish,\r\n      taskIds: finishTaskIds\r\n    };\r\n\r\n    this.props.changeUserTasks(newStart);\r\n    this.props.changeUserTasks(newFinish);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className=\"row\">\r\n          <div className=\"col\">\r\n            <a\r\n              href=\"#\"\r\n              className=\"btn btn-info btn-lg\"\r\n              onClick={e => this.props.logout()}\r\n            >\r\n              <span className=\"glyphicon glyphicon-log-out\" /> Log out\r\n            </a>\r\n          </div>\r\n        </div>\r\n\r\n        <div>\r\n          <DragDropContext\r\n            onDragStart={this.onDragStart}\r\n            onDragUpdate={this.onDragUpdate}\r\n            onDragEnd={this.onDragEnd}\r\n          >\r\n            <Droppable\r\n              droppableId=\"all-columns\"\r\n              direction=\"horizontal\"\r\n              type=\"column\"\r\n            >\r\n              {provided => (\r\n                <Container {...provided.droppableProps} ref={provided.innerRef}>\r\n                  {this.renderContent()}\r\n\r\n                  {provided.placeholder}\r\n                </Container>\r\n              )}\r\n            </Droppable>\r\n          </DragDropContext>\r\n        </div>\r\n        <InputTask />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    columns: state.users,\r\n    tasks: state.tasks,\r\n    columnOrder: state.userOrder\r\n  };\r\n};\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  {\r\n    fetchList,\r\n    fetchOrder,\r\n    fetchUser,\r\n    changeOrder,\r\n    changeUserTasks,\r\n    getLogedUser,\r\n    logout,\r\n    doneTask\r\n  }\r\n)(DragDrop);\r\n","import { alertActions } from './alert.actions';\r\nimport { authHeader } from '../helpers/auth-header';\r\nimport axios from 'axios';\r\nimport his from '../helpers/history';\r\nimport { userConstants } from './type';\r\n\r\nexport const login = (user) => {\r\n    return dispatch => {\r\n        dispatch(request({ user }));\r\n        axios.post(`https://kruczym.pythonanywhere.com/auth/`,user)\r\n            .then(\r\n                user => {\r\n                    if(user.data.token)\r\n                    {\r\n                        localStorage.setItem('user', user.data.token);\r\n                    }\r\n                    dispatch(success(user));\r\n                    his.push(\"/ToDoList\");\r\n                },\r\n                error => {\r\n                    dispatch(failure(error.response));\r\n                    dispatch(alertActions.error(error.response));\r\n                }\r\n            );\r\n    };\r\n\r\n    function request(user) { return { type: userConstants.LOGIN_REQUEST, payload:user } }\r\n    function success(user) { return { type: userConstants.LOGIN_SUCCESS, payload:user } }\r\n    function failure(error) { return { type: userConstants.LOGIN_FAILURE, payload:error } }\r\n}\r\n\r\nexport const logout = () => {\r\n    localStorage.removeItem('user');\r\n    return { type: userConstants.LOGOUT };\r\n}\r\nexport const getById = (id) => {\r\n    return axios.get(`/users/${id}`,{headers:authHeader()});\r\n}\r\n\r\nexport const register = (user) => {\r\n    \r\n    return dispatch => {\r\n        dispatch(request(user));\r\n       axios.post(`https://kruczym.pythonanywhere.com/api/users/`, user)\r\n            .then(\r\n                user => {\r\n                    dispatch(success());\r\n                    his.push(\"/login\");\r\n                    dispatch(alertActions.success('Registration successful'));\r\n                },\r\n                error => {\r\n                    dispatch(failure(error.response));\r\n                    dispatch(alertActions.error(error.response));\r\n                }\r\n            );\r\n    };\r\n\r\n    function request(user) { return { type: userConstants.REGISTER_REQUEST, payload:user } }\r\n    function success(user) { return { type: userConstants.REGISTER_SUCCESS, payload:user } }\r\n    function failure(error) { return { type: userConstants.REGISTER_FAILURE, payload:error } }\r\n}\r\n","import { Field, reduxForm, reset } from \"redux-form\";\r\nimport React, { Component } from \"react\";\r\nimport his from '../helpers/history';\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { login } from '../actions/user.actions';\r\n\r\nexport class LoginForm extends Component {\r\n\r\n    componentDidMount(){\r\n      if(localStorage.getItem('user')){\r\n        his.push(\"/ToDoList\")\r\n      }\r\n    }\r\n  \r\n  onSubmit = (values) => {\r\n      this.props.login(values);\r\n  };\r\n\r\n  renderField = field => {\r\n    const {\r\n      meta: { touched, error }\r\n    } = field;\r\n    const className = `${touched && error ? \"has-danger\" : \"\"}`;\r\n    return (\r\n      <div className={className}>\r\n        <label className=\"text-white\">{field.label}</label>\r\n        <input\r\n          type={field.type}\r\n          id={field.label.toLowerCase()}\r\n          {...field.input}\r\n        />\r\n        <div className=\"text-help\">{touched ? error : \"\"}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"wrap\">\r\n              <p className=\"error\">{this.props.loginCallBack.loging === false? 'Wrong login data' : null }</p>\r\n              <p className=\"form-title\">Sign In</p>\r\n              <form\r\n                onSubmit={handleSubmit(this.onSubmit.bind(this))}\r\n                className=\"login\"\r\n              >\r\n                <Field\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  component={this.renderField}\r\n                  label=\"UserName\"\r\n                />\r\n                <Field\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  component={this.renderField}\r\n                  label=\"Password\"\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-success btn-sm\"\r\n                  value=\"Sign In\"\r\n                />\r\n                <div className=\"row\">\r\n                  <div className=\" col-sm-offset-8 col-sm-4\">\r\n                    <Link to=\"/register\">Register</Link>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={{display:\"block\", position:\"absolute\", right:'10vw', top: '80vh'}}>\r\n          <button className=\"btn btn-success btn-sm\" onClick={()=>his.push(\"/ToDoList2\")}>Old version Todo</button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n  errors.username = !values.username ? \"Enter your username\" : null;\r\n  errors.password = !values.password ? \"Enter your password\" : null;\r\n  return errors;\r\n};\r\n\r\nconst mapStateToProps = state =>{\r\n  return {loginCallBack: state.login}\r\n}\r\n\r\nexport default reduxForm({\r\n  validate,\r\n  form: \"LoginForm\"\r\n})(\r\n  connect(\r\n    mapStateToProps,\r\n    {login}\r\n  )(LoginForm)\r\n);\r\n","import { ROOT_URL, taskConstans } from './type';\r\n\r\nimport axios from 'axios';\r\n\r\nconst API_KEY = '?apiKey=3bMGmgDbiAElHIMmsM0filej7frNsuQ-';\r\n\r\n\r\nconst start = (action) => ({\r\n    type: action,\r\n  });\r\n\r\n  const success = (action,posts) => ({\r\n    type: action,\r\n    payload: posts,\r\n  });\r\n\r\n  const fail = (action,error) => ({\r\n    type: action,\r\n    payload: error,\r\n  });\r\n\r\nexport const fetchList = () => (dispatch) =>{\r\n    dispatch(start(taskConstans.FETCH_LIST_START));\r\n    const request = axios.get( `${ROOT_URL}`) //${API_KEY}\r\n    return request.then( res => {\r\n        dispatch(success(taskConstans.FETCH_LIST_SUCCESS,res.data));\r\n        return res;\r\n    })\r\n    .catch(error => {\r\n        dispatch(fail(taskConstans.FETCH_LIST_ERROR,error));\r\n        return error;\r\n    })\r\n\r\n}\r\n\r\nexport const addTask = (task) => (dispatch) =>{\r\n\r\n    dispatch(start(taskConstans.ADD_TASK_START));\r\n    return axios.post( `${ROOT_URL}`,task) //${API_KEY}\r\n    .then( res => {\r\n        dispatch(success(taskConstans.ADD_TASK_SUCCESS,res.data));\r\n        return res;\r\n    })\r\n    .catch(error => {\r\n        dispatch(fail(taskConstans.ADD_TASK_ERROR,error));\r\n        return error;\r\n    })\r\n\r\n}\r\n\r\nexport const addToDone = (listOfTasks,task) => (dispatch) =>{\r\n    dispatch(start(taskConstans.ADD_TASK_DONE_START));\r\n    return axios.put( `${ROOT_URL}`,Object.values(listOfTasks)) //${API_KEY}\r\n    .then( res => {\r\n        dispatch(success(taskConstans.ADD_TASK_DONE_SUCCESS,res.data));\r\n        return res;\r\n    })\r\n    .catch(error => {\r\n        dispatch(fail(taskConstans.ADD_TASK_DONE_ERROR,error));\r\n        return error;\r\n    })\r\n\r\n}\r\n\r\nexport const deleteTask = (task) => (dispatch) => {\r\n    dispatch(start(taskConstans.DELETE_TASK_START));\r\n    return axios.delete( `${ROOT_URL}/${task._id.$oid}`) //${API_KEY}\r\n    .then( res => {\r\n        dispatch(success(taskConstans.DELETE_TASK_SUCCESS,res.data));\r\n        return res;\r\n    })\r\n    .catch(error => {\r\n        dispatch(fail(taskConstans.DELETE_TASK_ERROR,error));\r\n        return error;\r\n    })\r\n}","import { Field, reduxForm, reset } from 'redux-form';\r\nimport React, { Component } from 'react';\r\n\r\nimport { addTask } from '../actions/task.actions';\r\nimport { connect } from 'react-redux';\r\n\r\nexport const renderField = field => {\r\n\r\n    const { meta: { touched, error } } = field;\r\n    const className = `form-group ${touched && error ? 'has-danger' : ''}`;\r\n    return (\r\n        <div className={className}>\r\n            <label>{field.label}</label>\r\n            <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                {...field.input}\r\n            />\r\n            <div className=\"text-help\">\r\n                {touched ? error  : ''}\r\n                \r\n            </div>\r\n        </div>\r\n        \r\n    );\r\n}\r\n\r\nexport class AddTask extends Component {\r\n    onSubmit(values) {\r\n        const toDo={\r\n            name: values['task'],\r\n            isDone: false,\r\n            created: new Date().toLocaleString()\r\n            }\r\n        this.props.addTask(toDo);\r\n        this.props.dispatch(reset('TaskNewForm'));\r\n    }\r\n\r\n    render() {\r\n        const { handleSubmit } = this.props;\r\n\r\n        return (\r\n            <div className=\"col-sm-4\">\r\n                <form onSubmit={handleSubmit(this.onSubmit.bind(this))}>\r\n                    <Field\r\n                        label=\"Add Task\"\r\n                        name=\"task\"\r\n                        component={renderField}\r\n                    />\r\n                    <button type=\"submit\" className=\"btn btn-primary\">Add Task</button>\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction validate(values) {\r\n    const errors = {};\r\n    errors.task = !values.task ?  'Enter a task' : null;\r\n    return errors;\r\n    \r\n}\r\nfunction mapStateToProps(state){\r\n    return {listOfTasks: state.listOfTasks};\r\n}\r\n\r\n\r\nexport default reduxForm({\r\n    validate,\r\n    form: 'TaskNewForm',\r\n})(\r\n    connect(mapStateToProps, { addTask })(AddTask)\r\n)","import React,{ Component } from 'react';\r\nimport {deleteTask, fetchList} from '../actions/task.actions';\r\n\r\nimport _ from 'lodash';\r\nimport { connect } from 'react-redux';\r\n\r\nexport class DoneList extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.fetchList();\r\n    }\r\n\r\n    renderPosts(){\r\n\r\n        return _.map(this.props.listOfTasks, task => {\r\n\r\n            if(task.isDone === true)\r\n            {\r\n            return(\r\n                <li\r\n                className=\"list-group-item\"\r\n                key={task._id.$oid}\r\n                >\r\n                {task.name}\r\n                <span className=\"pull-xs-right\">\r\n                <button className=\"btn btn-danger btn-sm delete\"  onClick={()=>this.props.deleteTask(task)}>Usun</button>\r\n                </span>\r\n                </li>\r\n            );\r\n        }});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"col-sm-4\">\r\n            <h3>Done</h3>\r\n                <ul className=\"list-group\">\r\n                    {this.renderPosts()}\r\n                </ul>\r\n                </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {listOfTasks: state.listOfTasks};\r\n}\r\n\r\n\r\nexport default connect (mapStateToProps,{fetchList,deleteTask})(DoneList);\r\n","import React,{ Component } from 'react';\r\nimport { addToDone, deleteTask, fetchList } from '../actions/task.actions';\r\n\r\nimport _ from 'lodash';\r\nimport { connect } from 'react-redux';\r\n\r\nexport class ToDoList extends Component{\r\n\r\n    componentDidMount(){\r\n        this.props.fetchList();\r\n    }\r\n\r\n\r\n\r\n    addToDoneHelper(task){\r\n        let doneTask = task;\r\n        doneTask.isDone = true;\r\n        doneTask.end = new Date().toLocaleString();\r\n        this.props.addToDone(this.props.listOfTasks,doneTask);\r\n    }\r\n\r\n\r\n\r\n    renderPosts(){\r\n\r\n        return _.map(this.props.listOfTasks, task => {\r\n\r\n            if(task.isDone === false)\r\n            {\r\n            return(\r\n                <li\r\n                className=\"list-group-item\"\r\n                key={task._id.$oid}\r\n                >\r\n                {task.name}\r\n                <span className=\"pull-xs-right\">\r\n                <button className=\"btn btn-success btn-sm add\" onClick={()=>this.addToDoneHelper(task)}>Zrobione</button>\r\n                <button className=\"btn btn-danger btn-sm delete\"  onClick={()=>this.props.deleteTask(task)}>Usun</button>\r\n                </span>\r\n                </li>\r\n            );\r\n        }});\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"col-sm-4\">\r\n                <h3>ToDo</h3>\r\n                <ul className=\"list-group\">\r\n                    {this.renderPosts()}\r\n                </ul>\r\n                </div>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction mapStateToProps(state){\r\n    return {listOfTasks: state.listOfTasks};\r\n}\r\n\r\n\r\nexport default connect (mapStateToProps,{fetchList,addToDone,deleteTask})(ToDoList);\r\n","import { Field, reduxForm, reset } from \"redux-form\";\r\nimport React, { Component } from \"react\";\r\nimport his from '../helpers/history';\r\nimport { Link } from 'react-router-dom';\r\nimport _ from 'lodash';\r\nimport { connect } from \"react-redux\";\r\nimport { register } from '../actions/user.actions';\r\n\r\nexport class RegisterForm extends Component {\r\n\r\n  \r\n    componentDidMount(){\r\n      if(localStorage.getItem('user')){\r\n        his.push(\"/ToDoList\")\r\n      }\r\n    }\r\n  \r\n  onSubmit = (values) => {\r\n    this.props.register(values);\r\n  };\r\n\r\n  renderField = field => {\r\n    const {\r\n      meta: { touched, error }\r\n    } = field;\r\n    const className = `${touched && error ? \"has-danger\" : \"\"}`;\r\n    return (\r\n      <div className={className}>\r\n        <label className=\"text-white\">{field.label}</label>\r\n        <input\r\n          type={field.type}\r\n          id={field.label.toLowerCase()}\r\n          {...field.input}\r\n        />\r\n        <div className=\"text-help\">{touched ? error : \"\"}</div>\r\n      </div>\r\n    );\r\n  };\r\n\r\n\r\n  render() {\r\n    const { handleSubmit } = this.props;\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-12\">\r\n            <div className=\"wrap\">\r\n              <p className=\"error\">{this.props.registerCallBack.username}</p>\r\n              <p className=\"form-title\">Register</p>\r\n              <form\r\n                onSubmit={handleSubmit(this.onSubmit.bind(this))}\r\n                className=\"login\"\r\n              >\r\n                <Field\r\n                  name=\"username\"\r\n                  type=\"text\"\r\n                  component={this.renderField}\r\n                  label=\"UserName\"\r\n                />\r\n                <Field\r\n                  name=\"email\"\r\n                  type=\"email\"\r\n                  component={this.renderField}\r\n                  label=\"Email\"\r\n                />\r\n                <Field\r\n                  name=\"password\"\r\n                  type=\"password\"\r\n                  component={this.renderField}\r\n                  label=\"Password\"\r\n                />\r\n                <Field\r\n                  name=\"repeatPassword\"\r\n                  type=\"password\"\r\n                  component={this.renderField}\r\n                  label=\"Repeat Password\"\r\n                />\r\n                <input\r\n                  type=\"submit\"\r\n                  className=\"btn btn-success btn-sm\"\r\n                  value=\"Register\"\r\n                />\r\n                <div className=\"row\">\r\n                  <div className=\" col-sm-offset-8 col-sm-4\">\r\n                    <Link to=\"login\">Sign In</Link>\r\n                  </div>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n  errors.username = !values.username ? \"Enter your username\" : null;\r\n  errors.password = !values.password ? \"Enter your password\" : null;\r\n  errors.email = values.email && !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email) ?\r\n  'Invalid email address' : undefined;\r\n  errors.repeatPassword = !values.repeatPassword ? \"Enter your password second time\" : null;\r\n  errors.repeatPassword = values.repeatPassword !== values.password ? \"Password must be the same\" : null;\r\n  return errors;\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {registerCallBack : state.registration}\r\n}\r\n\r\nexport default reduxForm({\r\n  validate,\r\n  form: \"RegisterForm\"\r\n})(\r\n  connect(\r\n    mapStateToProps,\r\n    {register}\r\n  )(RegisterForm)\r\n);","import TasksReducer from './reducer_task';\r\nimport { combineReducers } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport { login } from './login.reducer';\r\nimport { registration } from './registration.reducer';\r\nimport { tasks } from './dropTask.reducer';\r\nimport { userOrder } from './userOrder.reducer';\r\nimport { users } from './dropUsers.reducer';\r\n\r\nconst rootReducer = combineReducers({\r\n  listOfTasks: TasksReducer,\r\n  form: formReducer,\r\n  registration,\r\n  login,\r\n  tasks,\r\n  users,\r\n  userOrder\r\n\r\n});\r\n\r\nexport default rootReducer;\r\n","import _ from 'lodash'\r\nimport { taskConstans } from '../actions/type';\r\n\r\nexport default function (state = {}, action){\r\n    switch (action.type){\r\n        case taskConstans.FETCH_LIST_SUCCESS:\r\n            return _.mapKeys(action.payload, 'name');\r\n        case taskConstans.ADD_TASK_DONE_SUCCESS:\r\n            return {...state,[action.payload.name]: action.payload};\r\n        case taskConstans.DELETE_TASK_SUCCESS:\r\n            return _.omit(state, action.payload.name);\r\n        case taskConstans.ADD_TASK_SUCCESS:\r\n            return {...state, [action.payload.name]: action.payload};\r\n        default:\r\n            return state;\r\n    }\r\n}","import { userConstants } from '../actions/type';\r\n\r\nexport function registration(state = {}, action) {\r\n  switch (action.type) {\r\n    case userConstants.REGISTER_REQUEST:\r\n      return { registering: true };\r\n    case userConstants.REGISTER_SUCCESS:\r\n      return {};\r\n    case userConstants.REGISTER_FAILURE:\r\n      return {username:action.type};\r\n    default:\r\n      return state\r\n  }\r\n}","import { userConstants } from '../actions/type';\r\n\r\nexport function login(state = {}, action) {\r\n  switch (action.type) {\r\n    case userConstants.LOGIN_REQUEST:\r\n      return { loging: true };\r\n    case userConstants.LOGIN_SUCCESS:\r\n      return {};\r\n    case userConstants.LOGIN_FAILURE:\r\n      return {loging: false};\r\n    default:\r\n      return state\r\n  }\r\n}","import {\r\n  ADD_TASK,\r\n  DONE_TASK,\r\n  FETCH_TASKS\r\n} from \"../actions/dragDropList.actions\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nexport function tasks(state = {}, action) {\r\n  switch (action.type) {\r\n    case FETCH_TASKS:\r\n      return _.mapKeys(action.payload.data, \"id\");\r\n    case ADD_TASK:\r\n      return { ...state, [action.payload.data.id]: action.payload.data };\r\n    case DONE_TASK:\r\n      return action.payload.data? { ...state, [action.payload.data.id]: action.payload.data } : state;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import {\r\n  CHANGE_USER_TASKS,\r\n  DELETE_USER_TASK,\r\n  FETCH_USERS,\r\n  GET_ID\r\n} from \"../actions/dragDropList.actions\";\r\n\r\nimport _ from \"lodash\";\r\n\r\nexport function users(state = {}, action) {\r\n  switch (action.type) {\r\n    case FETCH_USERS:\r\n      const userList = _.map(action.payload.data, user => {\r\n        user.title = user[\"username\"];\r\n        return user;\r\n      });\r\n      return _.mapKeys(userList, \"id\");\r\n    case CHANGE_USER_TASKS:\r\n      return !action.payload.data\r\n        ? state\r\n        : { ...state, [action.payload.data.id]: action.payload.data };\r\n    case GET_ID:\r\n      localStorage.setItem(\"userId\", action.payload.data);\r\n      return state;\r\n    case DELETE_USER_TASK:\r\n      const id = action.payload.data.split(\" \");\r\n      let userWithNewTask = state[id[1]];\r\n      userWithNewTask.taskIds = userWithNewTask.taskIds.filter(\r\n        el => el != id[0]\r\n      );\r\n      return { ...state, [id[1]]: userWithNewTask };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { CHANGE_ORDER, FETCH_ORDER } from '../actions/dragDropList.actions'\r\n\r\nimport _ from 'lodash';\r\n\r\nexport function userOrder(state = {}, action) {\r\n    switch (action.type) {\r\n      case FETCH_ORDER:\r\n         return action.payload.data;\r\n      case CHANGE_ORDER:\r\n         return action.payload.data;\r\n      default:\r\n        return state\r\n    }\r\n  }","import { Route, Router, Switch } from 'react-router-dom';\r\n\r\nimport DragDrop from './beautiful-components/drag-drop';\r\nimport LoginForm from './components/LoginForm';\r\nimport AppJs from './components/App';\r\nimport {PrivateRoute} from './helpers/privateRoute';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport RegisterForm from './components/RegisterForm';\r\nimport Root from './Root';\r\nimport history from './helpers/history';\r\n\r\nReactDOM.render(\r\n  <Root>\r\n    <Router history={history}>\r\n      <div>\r\n        <Switch>\r\n        <PrivateRoute exact path=\"/ToDoList\" component={DragDrop} />\r\n          <Route path=\"/ToDoList2\" component={AppJs} />\r\n          <Route path=\"/login\" component={LoginForm} />\r\n          <Route path=\"/register\" component={RegisterForm} />\r\n          <Route path=\"/\" component={LoginForm} />\r\n        </Switch>\r\n      </div>\r\n    </Router>\r\n  </Root>\r\n  , document.querySelector('#root'));","import { applyMiddleware, createStore } from 'redux';\r\n\r\nimport { Provider } from 'react-redux';\r\nimport React from 'react';\r\nimport reducers from './reducers';\r\nimport reduxPromise from 'redux-promise';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport default ( { children, initialState = {} } ) =>{\r\n    const store = createStore(reducers,initialState,applyMiddleware(reduxPromise,thunk));\r\n    return(\r\n        <Provider store={store}>\r\n            {children}\r\n        </Provider>\r\n    )\r\n}","import { Redirect, Route } from 'react-router-dom';\r\n\r\nimport React from 'react';\r\n\r\nexport const PrivateRoute = ({ component: Component, ...rest }) => (\r\n    <Route {...rest} render={props => (\r\n\r\n        localStorage.getItem('user')\r\n            ? <Component {...props} />\r\n            : <Redirect to={{ pathname: '/login', state: { from: props.location } }} />\r\n    )} />\r\n)","import AddTask from './AddTask';\r\nimport DoneList from './DoneList';\r\nimport React  from 'react';\r\nimport ToDoList from './ToDoList';\r\nimport his from '../helpers/history';\r\nexport default () =>  {\r\n  document.body.style.background = \"white\";\r\n    return (\r\n      <div>\r\n        <div>\r\n          <a className=\"btn btn-info btn-lg\" onClick={()=>{\r\n            document.body.style.background= \"url('http://farm3.staticflickr.com/2832/12303719364_c25cecdc28_b.jpg')\";\r\n            document.body.style.backgroundSize = 'cover'\r\n            his.push(\"/Login\")\r\n            }} >\r\n          <span className=\"glyphicon glyphicon-log-out\" /> Back\r\n          </a>\r\n        </div>\r\n        <ToDoList />\r\n        <AddTask />\r\n        <DoneList />\r\n      </div>\r\n    );\r\n  \r\n};\r\n"],"sourceRoot":""}